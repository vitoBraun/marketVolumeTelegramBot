from threading import Thread
from iofuncs import *
from chart import chart_gen


def sm(ms, text, nomarkup=False):
    if nomarkup == True:
        bot.send_message(ms.chat.id, text)
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        mrk = types.InlineKeyboardButton(text="check")
        markup.add(mrk)
        bot.send_message(ms.chat.id, text, reply_markup=markup)


class ChatbotClass(Thread):
    def __init__(self):
        Thread.__init__(self)

        @bot.message_handler(content_types=['text'])
        def start(message):
            username = message.chat.username

            if message.chat.username == None:
                sm(message, '–£ –≤–∞—Å –Ω–µ—Ç –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram, –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö', nomarkup=True)
            else:
                if check_user_exist(username) == False:
                    if message.text == 'ABC':
                        save_user([message.chat.id, message.chat.username])
                        sm(message, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!')
                    else:
                        sm(message, '!%under maintainance', nomarkup=True)
                else:
                    if message.text == '/start':
                        try:
                            sm(message, '–ú–∏—Å—Ç–µ—Ä –†–æ–±–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∏ –ø—Ä–∏—Å—Ç–∞–ª—å–Ω–æ –Ω–∞–±–ª—é–¥–∞–µ—Ç –∑–∞ —Ä—ã–Ω–∫–æ–º üëÄ. –ñ–¥–µ–º –Ω–æ–≤–æ—Å—Ç–µ–π... üí´ ')
                        except:
                            pass
                    if message.text == 'check':
                        data = read_data()
                        string = ''
                        for i in data:
                            string += str(i[0]) + ': ' + str(i[1]) + '\n'
                        img = open('chart.png', 'rb')
                        bot.send_photo(message.chat.id, img, caption=string)
                    if message.text == 'stop':
                        del_user(message.chat.username)
                        sm(message, '–í—ã —É–¥–∞–ª–µ–Ω—ã', nomarkup=True)
                    if message.text[0] == '_' and username == admin:
                        command = message.text.replace('_', '')
                        command = command.split(' ')
                        if len(command) == 3:
                            settings[command[0]] = str(
                                command[1] + ' ' + command[2])
                        else:
                            settings[command[0]] = command[1]
                        save_settings(settings)
                        sm(message, str(dict(
                            config_object['settings'])))
                    if message.text == 'settings' and username == admin:
                        sm(message, str(dict(
                            config_object['settings'])))
                    if message.text == 'users' and username == admin:
                        data = read_users()
                        string = ''
                        for i in data:
                            string += str(i[0]) + ' ' + str(i[1]) + '\n'
                        sm(message, string)
                    if message.text.split()[0] == 'delete' and username == admin:
                        del_user(message.text.split()[1])
                        sm(message, 'User ' +
                           message.text.split()[1] + ' —É–¥–∞–ª–µ–Ω')
                    if message.text == 'chart':
                        chart_gen()
                        sm(message, '–ß–∞—Ä—Ç –æ–±–Ω–æ–≤–ª–µ–Ω')

                    if message.text == 'commands' and username == admin:
                        commands = '''
                        –ö–æ–º–º–∞–Ω–¥—ã: 
                        users - –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                        settings - –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                        chart - –û–±–Ω–æ–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É —Å –≥—Ä–∞—Ñ–∏–∫–æ–º
                        delete <username> - –£–¥–∞–ª–∏—Ç—å —é–∑–µ—Ä–∞
                        stop - –£–¥–∞–ª–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞
                        _period [n] [minutes/hours/days] - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–∏–æ–¥ –Ω–∞ –≥—Ä–∞—Ñ–∏–∫
                        _candle [n]HOUR/MINUTE - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–ª–∏–Ω–Ω—É —Å–≤–µ—á–∫–∏
                        msg <—á–∞—Ç id> <—Å–æ–æ–±—â–µ–Ω–∏–µ> - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞'''

                        sm(message, commands)
                    if message.text.split()[0] == 'msg' and username == admin:
                        try:
                            bot.send_message(message.text.split()[
                                             1], message.text.split()[2])
                        except:
                            sm(message,
                               '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å: <—á–∞—Ç id> <—Å–æ–æ–±—â–µ–Ω–∏–µ>')
            print('...ChatBot...')
